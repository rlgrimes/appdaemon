[{"id":"56cbb45a.6e811c","type":"tab","label":"Key Master","disabled":false,"info":""},{"id":"2aaac628.6fef4a","type":"server-events","z":"56cbb45a.6e811c","name":"Keymaster Lock State Change","server":"bff612da.ea51b","event_type":"keymaster_lock_state_changed","exposeToHomeAssistant":false,"haConfig":[{"property":"name","value":""},{"property":"icon","value":""}],"waitForRunning":true,"x":340,"y":320,"wires":[["8b079a51.8d2448"]]},{"id":"8b079a51.8d2448","type":"function","z":"56cbb45a.6e811c","name":"Keymaster Actions","func":"\n// read all states (on/off) Verify Server name under global context\nconst haCtx = global.get(\"homeassistant\");\nconst configCtx = haCtx.homeAssistant;\nconst home = configCtx.states[\"group.family\"];\n\n//Define Variable\nconst user_code = msg.payload.event.code_slot;\nconst user_string = msg.payload.event.code_slot_name;\nconst entity_id = msg.payload.entity_id;\nconst entity = msg.payload.event.lockname;\nconst action_type = msg.payload.event.action_text;\nlet friendly_name;\nlet greeting;\nlet entity_name;\n\n//Message Return Variables\nlet ntf_msg;\nlet voice_msg;\nlet alarm_action;\n\n// Lock Names\nif (entity == \"frontdoor\")\n{\n    entity_name = \"Front Door\";\n}\n\nelse\n{\n    entity_name = entity;\n}\n\n// Greetings\nif (user_string == 'Robert')\n{\n    let greeting_options = [\"Welcome home, \", \"Good to see you \", \"Where you been \", \"Kick your shoes off \"];\n    let name_options = [\"Robert \"];\n\n    greeting = greeting_options[Math.floor(Math.random() * greeting_options.length)];\n    friendly_name = name_options[Math.floor(Math.random() * line2.length)];\n}\n\nelse if (user_string == 'Virginia')\n{\n    let greeting_options = [\"Welcome home, \", \"Good to see you \", \"Where you been \", \"Kick your shoes off \"];\n    let name_options = [\"Punkin \", \"Virginia \", \"babe \"];\n\n    greeting = greeting_options[Math.floor(Math.random() * greeting_options.length)];\n    friendly_name = name_options[Math.floor(Math.random() * name_options.length)];\n}\n\nelse if (user_string == 'Parker')\n{\n    let greeting_options = [\"Welcome home, \", \"Good to see you \", \"Where you been \", \"Kick your shoes off \"];\n    let name_options = [\"Parker \", \"dude\"];\n\n    greeting = greeting_options[Math.floor(Math.random() * greeting_options.length)];\n    friendly_name = name_options[Math.floor(Math.random() * name_options.length)];\n}\n\nelse\n{\n    let greeting_options = [\"Hello\", \"Good to see you \"];\n    \n    greeting = greeting_options[Math.floor(Math.random() * greeting_options.length)];\n    friendly_name = user_string;\n}\n\n\n//Lock Actions\nif (action_type == \"Keypad unlock operation\")\n{\n    alarm_action = \"alarm_disarm\";\n    if (home === \"home\") \n    {\n        ntf_msg = { payload: `The ${entity_name} lock was just unlocked by ${user_string}.`};\n        voice_msg = { payload: `${Greeting} ${friendly_name}.`};\n        alarm_action = { payload : null };\n    }\n    \n    else\n    {   \n        message = { payload: `The ${entity_name} lock was just unlocked by ${user_string} with nobody home, are they allowed to do this?`};\n        voice_msg = { payload:  `Hello ${friendly_name}, I have notified the owners that you have entered the home.`};\n        alarm_action = { payload : null };\n    }\n}    \n\nelse if (action_type == \"Keypad lock operation\")\n{\n    alarm_action = { payload: \"alarm_arm_home\"};\n    ntf_msg = { payload: `The ${entity_name} was just locked by the keypad`};\n    alarm_action = { payload : null };\n}\n\nelse if (action_type == \"Manual unlock operation\")\n{\n    if (home === \"home\")\n    { \n        ntf_msg = { payload: `The ${entity_name} was just manually unlocked.`};\n        voice_msg = { payload : null };\n        alarm_action = { payload : null };\n    }\n    \n    else\n    { \n        ntf_msg = { payload: `The ${entity_name} lock was just unlocked with nobody home!`};\n        voice_msg = { payload: `Hello there, be advised that I have notified the home owners that you have unlocked the ${entity_name}`};\n        alarm_action = { payload : null };\n    }\n}\n\nelse if (action_type == \"Manual lock operation\")\n{\n    ntf_msg = { payload: `The ${entity_name} was manually locked.`};\n    voice_msg = { payload : null };\n    alarm_action = { payload : null };\n}\n\nelse\n{\n    ntf_msg = { payload: `The ${entity_name} was just operated with no information?`};  \n    voice_msg = { payload : null };\n    alarm_action = { payload : null };\n}\n\n//msg.payload = payload\nmsg.topic = `${entity_name} Lock Notification`;\nreturn [[msg.topic, ntf_msg], voice_msg, alarm_action];","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":320,"wires":[["15edbad5.9b9aa5"],["97bef413.1178c8"],["82bf7c02.56281"]]},{"id":"15edbad5.9b9aa5","type":"debug","z":"56cbb45a.6e811c","name":"Notify Message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":280,"wires":[]},{"id":"97bef413.1178c8","type":"debug","z":"56cbb45a.6e811c","name":"Voice Message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":320,"wires":[]},{"id":"82bf7c02.56281","type":"debug","z":"56cbb45a.6e811c","name":"Alarm Action","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":870,"y":360,"wires":[]},{"id":"bff612da.ea51b","type":"server","name":"HomeAssistant","legacy":false,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true}]